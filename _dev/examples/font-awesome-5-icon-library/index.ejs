<%- include(`${process.env.PWD}/_dev/_layouts/_default.head.ejs`, pageData) %>

    <style>
      .assets {
        display:block;
        width:100%;
      }
      .assets > div.asset {
        float:left;
        display:flex;
      }
      .assets > div.asset.hidden {
        height: 16px;
        width: 16px;
        border:0;
      }
      .assets > div.asset.heading {
        margin: 4px 0;
        border:0;
      }
      .assets div:hover {
        cursor: pointer;
      }
      .assets div .number,
      .assets div .name {
        font-size:12px;
        display:none;
      }
      .isotope-size\:48 {width:64px;height:64px;margin:0 8px 8px 0;}
    </style>
    <div class="display:flex flex-flow:row-wrap form:theme:gl0b3x"
      id
      data-module="isotope"
      data-isotope-layout-mode='masonry'
      data-isotope-sort-data='{"number": "[data-sort-number] parseInt"}'
      data-isotope-sortBy-bind-id="isotope-sort"
      data-isotope-filters-bind-ids='["fa5dam-autocomplete","fa5dam-type","fa5dam-color"]'
      data-isotope-filter-initial='*'
      data-isotope-filter-no-results='*'>
      <fieldset class="hide" id="isotope-sort" data-isotope-sort-group="sort">
        <legend>Sort</legend>
        <input type="radio" name="sort" id="sort-number" data-isotope-sort-value="number" checked>
        <label for="sort-number">Number</label>
      </fieldset>

      <div class="w0:2 position:relative">
        <div
          class="position:fixed" style="left:0;width:16.667%;">
          <h2 class="heebo:bold">Filters</h2>

          <div class="mx:2px mb:8px b-gray:2px brr:8px">
            <div class="p:8px w:100% align-self:centered" data-module="autocomplete" id="fa5dam-autocomplete" data-autocomplete-filter="tags" data-autocomplete-value-format='[".","keyword-","tags"]' data-autocomplete-input-format='["tags"]' data-autocomplete-source-type="function" data-autocomplete-source="storm_eagle.fa5dam.get_keyword_database" data-autocomplete-type="single-select" data-isotope-filter-group="name" data-isotope-filter-group-type="input_autocomplete" data-autocomplete-onupdate-func="storm_eagle.isotope.ui.refresh_all">
              <div class="position:relative w:100%">
                <input type="text" data-module="autocomplete.input" id="fa5dam" name="fa5dam" role="combobox" aria-autocomplete="both" aria-owns="fa5dam-autocomplete-results" aria-activedescendant="" autocomplete="off" aria-expanded="false" aria-required="true" aria-describedby="autocomplete-error" required>
                <label for="fa5dam" id="fa5dam-autocomplete-label"><span class="description">Keyword Search</span></label>
              </div>
              <div data-module="autocomplete.sr-description" id="fa5dam-autocomplete-sr-description" class="show-for-sr" aria-live="assertive"></div>
              <div class="position:relative z-index:1">
                <ul class="display:none unstyle-pl:0 pt:12px b-silver:1px position:absolute top:0 left:0 right:0 bgc:white" id="fa5dam-autocomplete-results" data-module="autocomplete.results" data-autocomplete-max-results="-1" data-bind="fa5dam" role="listbox" aria-labelledby="fa5dam-autocomplete-label" style="max-height: 400px;"></ul>
              </div>
              <span class="error-message" role="alert" data-module="autocomplete.error" id="autocomplete-error">Please enter an icon</span>
            </div>
          </div>

          <fieldset class="brr:8px mb:8px"
            id="fa5dam-type"
            data-isotope-filter-group="type"
            data-isotope-filter-group-type="radiobutton">
            <legend class="hide">Type</legend>
            <h3>Type</h3>
            <input type="radio" name="type" id="all" data-isotope-filter-value="*" checked>
            <label for="all" class="display:block mb:4px">All</label>
            <input type="radio" name="type" id="icon" data-isotope-filter-value=".type-icon">
            <label for="icon" class="display:block mb:4px">Icon</label>
            <input type="radio" name="type" id="brand" data-isotope-filter-value=".type-brand">
            <label for="brand" class="display:block mb:4px">Brand</label>
          </fieldset>
          <fieldset class="brr:8px"
            id="fa5dam-color"
            data-isotope-filter-group="color"
            data-isotope-filter-group-type="radiobutton">
            <legend class="hide">Color</legend>
            <h3>Color</h3>
            <input type="radio" name="color" id="color-all" data-isotope-filter-value="*" checked>
            <label for="color-all" class="display:block mb:4px">All</label>
            <input type="radio" name="color" id="duotone" data-isotope-filter-value=".isotope-color-duotone">
            <label for="duotone" class="display:block mb:4px">Duotone</label>
            <input type="radio" name="color" id="various" data-isotope-filter-value=".isotope-color-various">
            <label for="various" class="display:block mb:4px">Various</label>
            <input type="radio" name="color" id="light" data-isotope-filter-value=".isotope-color-light" disabled>
            <label for="light" class="display:block mb:4px">Light (Disabled)</label>
            <input type="radio" name="color" id="regular" data-isotope-filter-value=".isotope-color-regular" disabled>
            <label for="regular" class="display:block mb:4px">Regular (Disabled)</label>
            <input type="radio" name="color" id="solid" data-isotope-filter-value=".isotope-color-solid" disabled>
            <label for="solid" class="display:block mb:4px">Solid (Disabled)</label>
          </fieldset>
        </div>
      </div>
      <div class="w0:7">
        <h2 class="heebo:bold">Font Awesome 5 Icon Library</h2>
        <div class="assets" data-module="isotope.elements-container">
        </div>
      </div>
      <div class="w0:3 position:relative">

        <div class="position:fixed overflow:hidden" style="right:8px;width:24%;">
          <h2 class="heebo:bold">Preview</h2>
          <div class="display:flex align:center flex-dir:col h:100%">
            <div>
              <div class="w0:12 text-align:center display:flex align:center align:middle b-onyx:2px br:8px" style="border-style:groove;border-color:threedface;height:300px">
                <div id="asset" class="h:100%">
                </div>
              </div>
              <div class="w0:12" style="min-height:500px">
                <h2 class="mt:16px fs:20px heebo:bold">Details</h2>
<!--                 <h3 class="heebo:bold">Name: </h3>
                <div class="sm+:mb:16px" id="name"></div> -->
                <div class="mt:16px ws:nowrap"><span class="heebo:bold">Pathname: </span><span id="pathname"></span></div>
                <div class="mt:16px ws:nowrap"><span class="heebo:bold">Colour: </span><span id="color"></span></div>
                <div class="mt:16px ws:nowrap"><span class="heebo:bold">Tags: </span><span id="tags"></span></div>
                <!-- <h3 class="heebo:bold">Notes: </h3>
                <div class="sm+:mb:16px" id="notes"></div> -->
                <h2 class="mt:16px fs:20px heebo:bold">Alternatives</h2>
                <div class="mt:16px ws:nowrap"><span class="heebo:bold">Light: </span><span id="pathname-light"></span><br><span id="icon-light"></span></div>
                <div class="mt:16px ws:nowrap"><span class="heebo:bold">Regular: </span><span id="pathname-regular"></span><br><span id="icon-regular"></span></div>
                <div class="mt:16px ws:nowrap"><span class="heebo:bold">Solid: </span><span  id="pathname-solid"></span><br><span id="icon-solid"></span></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

<%- include(`${process.env.PWD}/_dev/_layouts/_default.scripts.ejs`, pageData) %>
<script>
  storm_eagle.module('fa5dam', () => {
    'use strict';
    let self;

    const _add_slashes = (string) => {
      //no need to do (str+'') anymore because 'this' can only be a string
      return string.replace(/[:]+/g, '\\\:').replace(/[&]/g, '\\\&').replace(/[$]/g, '\\\$').replace(/[?]/g, '\\\?').replace(/[!]/g, '\\\!');
    }

    return {
      initialize: () => {
        self = storm_eagle.fa5dam;
        self.init_ui();
        self.add_event_listeners();
      },
      init_ui: () => {
        let asset_html = "";
        let tags_array = [];
        assets.forEach((asset, index) => {
          //if (index > 1800 && index < 2000) { for only loading a few icons at a time
          let { name, type, pathname, tags, color } = asset;

          //create the keyword database based off the tags
          tags_array = tags.split(',');
          let all_isotope_keywords = "";
          tags_array.forEach((el,index) => {
            all_isotope_keywords += ' keyword-' + el.toString().replace(/ /g,'-'); //convert space to dashes;
          });

          //create each asset's html
          asset_html += `<div data-asset="${name}" data-module="isotope.element" data-sort-number="${index}" class="asset ${all_isotope_keywords} type-${type} isotope-color-${color} isotope-size:48 align:center bgc:platinum">`;
          asset_html += `  <span class="number">${parseInt(index)}</span>`;
          asset_html += `  <span class="name">${name}</span>`;
          asset_html += `  <img src="${pathname}" class="w0:100% h:100% object-fit:contain">`;
          asset_html += `</div>`;
          //} for only loading a few icons at a time
        });

        document.querySelector(".assets").innerHTML = asset_html;
      },
      get_keyword_database: () => {
        let keyword_database = [];
        assets.forEach((asset) => {
          let tags_array = asset.tags.split(',');
          tags_array.forEach((tag) => {
            if(keyword_database.indexOf(tag) === -1) {
              keyword_database.push(tag.toString());
            }
          });
        });

        // Sorting and removing duplicates is not necessary with the current approach
        // since we're checking existence in the array before adding,
        // but in case of future modifications, it's a good practice to ensure uniqueness.
        keyword_database = [...new Set(keyword_database)].sort();

        // Transforming the keyword_database into the desired format
        let formatted_keywords = keyword_database.map(tag => ({ tags: tag }));
        return formatted_keywords;
      },
      add_event_listeners: () => {

        const _find_object_with_param = (object_array,param,val) => {
          let result = object_array.filter(obj => {
            return obj[param] === val;
          })
          return result;
        }

        document.querySelectorAll(".assets > div").forEach(el => {
          el.addEventListener('click', () => {
            let asset = _find_object_with_param(assets,"name",el.getAttribute("data-asset"));
            document.getElementById("asset").innerHTML = `<img src="${asset[0]["pathname"]}" class="w0:100% h:100% object-fit:contain">`;
            // document.getElementById("name").innerHTML = asset[0]["name"];
            document.getElementById("pathname").innerHTML = asset[0]["pathname"];
            document.getElementById("color").innerHTML = asset[0]["color"];
            document.getElementById("tags").innerHTML = `<br>` + asset[0]["tags"].replace(/,/g,"<br>");
            // document.getElementById("notes").innerHTML = asset[0]["notes"];
            document.getElementById("pathname-light").innerHTML = `${asset[0]["pathname"].replace('duotone', 'light')}`;
            document.getElementById("icon-light").innerHTML = `<img src="${asset[0]["pathname"].replace('duotone', 'light')}" class="" style="width:60px;height:60px;">`;
            document.getElementById("pathname-regular").innerHTML = `${asset[0]["pathname"].replace('duotone', 'regular')}`;
            document.getElementById("icon-regular").innerHTML = `<img src="${asset[0]["pathname"].replace('duotone', 'regular')}" class="" style="width:60px;height:60px;">`;
            document.getElementById("pathname-solid").innerHTML = `${asset[0]["pathname"].replace('duotone', 'solid')}`;
            document.getElementById("icon-solid").innerHTML = `<img src="${asset[0]["pathname"].replace('duotone', 'solid')}" class="" style="width:60px;height:60px;">`;
          });
        });
      },
    };
  });
</script>
<%- include(`${process.env.PWD}/_dev/_layouts/_default.footer.ejs`, pageData) %>