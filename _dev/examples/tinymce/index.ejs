<%- include(`${process.env.PWD}/_dev/_layouts/_default.head.ejs`, pageData) %>
    <main class="pb:96px" role="main">
      <h1 class="w:100% mw:1280px align-self:centered play:bold fs:40px color:eerie-black pt:32px pb:32px sm+:px:8px xl+:px:0">TinyMCE - RTE (Rich Text Editor) Examples</h1>

      <section class="mw:1280px row align-self:centered">
        <div class="w:6 pr:8px">
          <section class="w:100% py:16px">
            <div class="mw:1280px align-self:centered">
              <div class="pb:16px">
                <h2 class="display:inline play">Simple</h2>
                <em>(inside Headings)</em>
              </div>
              h3 Example:
              <div class="b-silver:1px p:8px brr:8px mb:16px text-align:center display:flex align:center align:middle" data-equalize-height="tinymce-example"><h3 class="display:inline heebo" id="editor-simple-headings"></h3></div>
              <form method="post">
                <textarea id data-module="tinymce" data-tinymce-type="simple-headings" data-tinymce-preview="editor-simple-headings"></textarea>
              </form>
            </div>
          </section>
        </div>
        <div class="w:6 pl:8px">
          <section class="w:100% py:16px">
            <div class="mw:1280px align-self:centered">
              <div class="pb:16px">
                <h2 class="display:inline play">Simple</h2>
                <em>(inside Anchors/Buttons)</em>
              </div>
              Button example:
              <div class="b-silver:1px p:8px brr:8px mb:16px text-align:center" data-equalize-height="tinymce-example"><button class="button:blue" id="editor-simple-interactive">test</button></div>
              <form method="post">
                <textarea id data-module="tinymce" data-tinymce-type="simple-interactive" data-tinymce-preview="editor-simple-interactive"></textarea>
              </form>
            </div>
          </section>
        </div>
      </section>

      <section class="w:100% py:16px">
        <div class="mw:1280px align-self:centered">
          <h2 class="play:bold fs:32px color:eerie-black pb:16px">Complex</h2>
          <div id="editor-complex" class="brr:8px b-silver:1px mb:16px bgc:white p:8px" style="min-height:100px">
          </div>
          <form method="post">
            <textarea id data-module="tinymce" data-tinymce-type="complex" data-tinymce-preview="editor-complex"></textarea>
          </form>
        </div>
      </section>

      <hr>

      <section class="pt:16px mw:1280px align-self:centered">
        <h2 class="play:bold fs:32px color:eerie-black pb:32px">Requirements</h2>

        <legend class="align-self:centered heebo:bold">Legend:</legend>
        <dl class="row w:6 b-onyx:1px p:8px mb:32px">
          <dt class="w:3 px:4px display:flex align:middle align:right">[blank]</dt>
          <dd class="w:9 px:4px display:flex align:middle text-align:left ml:0">Not required</dd>
          <dt class="w:3 px:4px display:flex align:middle align:right"><div class="display:inline-flex ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"></div></dt>
          <dd class="w:9 px:4px display:flex align:middle text-align:left ml:0">Available and implemented in this example</dd>
          <dt class="w:3 px:4px display:flex align:middle align:right"><div class="display:inline-flex ic ic-type:solid ic-color:warning ic-size:24px ic-name:check"></div></dt>
          <dd class="w:9 px:4px display:flex align:middle text-align:left ml:0">Likely available but not implemented</dd>
          <dt class="w:3 px:4px display:flex align:middle align:right"><div class="display:inline-flex ic ic-type:solid ic-color:negative ic-size:24px ic-name:times"></div></dt>
          <dd class="w:9 px:4px display:flex align:middle text-align:left ml:0">Not available</dd>
        </dl>

        <table class="w:100%" border="1">
          <caption>
            A table of requirements for the TinyMCE Editor example
          </caption>
          <thead>
            <tr>
              <td style="width:28%"></td>
              <th style="width:18%">Example</th>
              <th style="width:18%">Simple<br>(inside Headings)</th>
              <th style="width:18%">Simple<br>(inside Anchors/Buttons)</th>
              <th style="width:18%">Complex</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th class="p:8px text-align:left">Font Switching</th>
              <td class="p:8px">Heebo & Play</td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Headings</th>
              <td class="p:8px">H1, H2, H3, H4</td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">B</th>
              <td class="p:8px">&lt;strong&gt;</td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">I</th>
              <td class="p:8px">&lt;em&gt;</td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Font Sizes</th>
              <td class="p:8px">14px, 16px</td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Line Height</th>
              <td class="p:8px">1.5</td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Superscript</th>
              <td class="p:8px"></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Ordered List</th>
              <td class="p:8px"><ol><li>List item</li><li>List item</li><li>List item</li></ol></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Unordered List</th>
              <td class="p:8px"><ul><li>List item</li><li>List item</li><li>List item</li></ul></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Custom List</th>
              <td class="p:8px"><ul><li>List item</li><li>List item</li><li>List item</li></ul></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:warning ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Alignment</th>
              <td class="p:8px">left, right, center</td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Add Components</th>
              <td class="p:8px">Link / Button / Tooltip</td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:warning ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center">&nbsp;<span class="show-for-screen-reader-only">No</span></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:warning ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">No Wrap/No Break</th>
              <td class="p:8px"></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Span SR text/aria-hidden</th>
              <td class="p:8px">
                &lt;span role="text"&gt;<br>
                &nbsp;&nbsp;&nbsp;&nbsp;&lt;span class="sr-only"&gt;<br>
                &nbsp;&nbsp;&nbsp;&nbsp;&lt;span aria-hidden&gt;<br>
                &lt;/span&gt;
              </td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:warning ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:warning ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:warning ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
            <tr>
              <th class="p:8px text-align:left">Character Map</th>
              <td class="p:8px">
                à, â, ä, é, è, ê, ë, î, ï, ô, ù, û, ü, «, ç, œ, », ©, ®, ™, †, ††, ‡, ‡‡, §, §§, *, **, ***, Δ
              </td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
              <td class="p:8px text-align:center"><div class="display:inline-block ic ic-type:solid ic-color:positive ic-size:24px ic-name:check"><span class="show-for-screen-reader-only">Yes</span></div></td>
            </tr>
          </tbody>
        </table>
      </section>
    </main>

<%- include(`${process.env.PWD}/_dev/_layouts/_default.scripts.ejs`, pageData) %>
    <!-- <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script> -->
    <script src="https://cdn.tiny.cloud/1/<%=process.env.TINYMCE_API%>/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
      'use strict';
      const tinymce_simple_headings = {
        height: 150,
        forced_root_block: 'faketag', //prevents a wrapping <p> tag as these should have no wrapper
        plugins: 'anchor casechange charmap checklist code codesample editimage emoticons export formatpainter fullscreen help image insertdatetime link lists media mergetags nonbreaking pagebreak pageembed permanentpen preview save searchreplace table tableofcontents typography visualblocks visualchars wordcount',
        toolbar: "undo redo | italic superscript | link openlink unlink | aligncenter alignjustify alignleft alignnone alignright | charmap | advanced",
      };
      const tinymce_simple_interactive = {
        height: 150,
        forced_root_block: 'faketag', //prevents a wrapping <p> tag as these should have no wrapper
        plugins: 'anchor casechange charmap checklist code codesample editimage emoticons export formatpainter fullscreen help image insertdatetime link lists media mergetags nonbreaking pagebreak pageembed permanentpen preview save searchreplace table tableofcontents typography visualblocks visualchars wordcount',
        toolbar: "undo redo | italic superscript | link openlink unlink | charmap | visualblocks | advanced",
      };
      const tinymce_complex = {
        height: 350,
        plugins: 'anchor casechange charmap checklist code codesample editimage emoticons export formatpainter fullscreen help image insertdatetime link lists media mergetags nonbreaking pagebreak pageembed permanentpen preview save searchreplace table tableofcontents typography visualblocks visualchars wordcount',
        toolbar: "undo redo | blocks styles | bold italic superscript | bullist numlist | link openlink unlink | aligncenter alignjustify alignleft alignnone alignright | charmap | visualblocks | advanced",

        style_formats: [
          { title: 'Heading Font' },
          { title: 'Heebo', format: 'heebo', classes: 'heebo' },
          { title: 'Play', format: 'play', classes: 'play' },
          { title: 'Text Font' },
          { title: 'Heebo Bold', format: 'heebo:bold', classes: 'heebo:bold' },
          { title: 'Heebo Medium', format: 'heebo:medium', classes: 'heebo:medium' },
          { title: 'Heebo Light', format: 'heebo:light', classes: 'heebo:light' },
          { title: 'Color' },
          { title: 'blue', format: 'color:blue', classes: 'color:blue' },
          { title: 'white', format: 'color:white', classes: 'color:white' },
          { title: 'eerie-black', format: 'color:eerie-black', classes: 'color:eerie-black' },
          { title: 'yale-blue', format: 'color:yale-blue', classes: 'color:yale-blue' },
          { title: 'positive', format: 'color:positive', classes: 'color:positive' },
          { title: 'negative', format: 'color:negative', classes: 'color:negative' },
          { title: 'Font Size' },
          { title: '16px', format: 'fs:16px', classes: 'fs:16px' },
          { title: '14px', format: 'fs:14px', classes: 'fs:14px' },
          { title: 'More ...' },
          { title: 'Containers', items: [
            { title: 'Div', block: 'div' },
            { title: 'Pre', block: 'pre' },
            { title: 'Section', block: 'section', wrapper: true, merge_siblings: false },
            { title: 'Aside', block: 'aside', wrapper: true },
            { title: 'Article', block: 'article', wrapper: true, merge_siblings: false },
            { title: 'Blockquote', block: 'blockquote', wrapper: true },
            { title: 'Hgroup', block: 'hgroup', wrapper: true },
            { title: 'Figure', block: 'figure', wrapper: true }
          ]},
        ],

        block_formats: 'Paragraph=p; Header 1=h1; Header 2=h2; Header 3=h3; Header 4=h4;',
      };
      const tinymce_common = {
        placeholder: "Placeholder copy...",
        entity_encoding : "named",

        menubar: false,
        autosave_restore_when_empty: true,

        visualblocks_default_state: true,
        end_container_on_empty_block: true,

        inline_styles : false,

        style_formats_merge: false,
        style_formats_autohide: true,
        content_style: `
          .heebo {
            font-family: "heebo-bold", Arial, Sans-Serif;
            font-size: 16px;
          }
          .play {
            font-family: "play-bold", Arial, Sans-Serif;
            font-size: 16px;
          }
          .heebo\\:bold {
            font-family: "heebo-bold", Arial, Sans-Serif;
            font-size: 16px;
          }
          .heebo\\:medium {
            font-family: "heebo-medium", Arial, Sans-Serif;
            font-size: 16px;
          }
          .heebo\\:light {
            font-family: "heebo-light", Arial, Sans-Serif;
            font-size: 16px;
          }
          .color\\:blue {
            font-family: "heebo-bold", Arial, Sans-Serif;
            color: #3169b2;
          }
          .color\\:white {
            font-family: "heebo-bold", Arial, Sans-Serif;
            color: white;
            text-shadow: 0 0 3px #202020;
          }
          .color\\:eerie-black {
            font-family: "heebo-bold", Arial, Sans-Serif;
            color: #202020;
          }
          .color\\:yale-blue {
            font-family: "heebo-bold", Arial, Sans-Serif;
            color: #1c3b65;
          }
          .color\\:positive {
            font-family: "heebo-bold", Arial, Sans-Serif;
            color: #09681d;
          }
          .color\\:negative {
            font-family: "heebo-bold", Arial, Sans-Serif;
            color: #a01010;
          }
          .fs\\:16px {
            font-size: 1rem;
          }
          .fs\\:14px {
            font-size: 0.875rem;
          }
        `,
        formats : {
          'text-align:left' : {selector : 'p,h1,h2,h3,h4,td,th,div,ul,ol,li', 'classes' : 'text-align:left'},
          'text-align:center' : {selector : 'p,h1,h2,h3,h4,td,th,div,ul,ol,li', 'classes' : 'text-align:center'},
          'text-align:right' : {selector : 'p,h1,h2,h3,h4,td,th,div,ul,ol,li', 'classes' : 'text-align:right'},
          'heebo' : {selector: 'h1,h2,h3,h4', 'classes' : 'heebo'},
          'play' : {selector: 'h1,h2,h3,h4', 'classes' : 'play'},
          'heebo:bold' : {selector: 'p,td,th,div,ul,ol,li,span', 'classes' : 'heebo:bold'},
          'heebo:medium' : {selector: 'p,td,th,div,ul,ol,li,span', 'classes' : 'heebo:medium'},
          'heebo:light' : {selector: 'p,td,th,div,ul,ol,li,span', 'classes' : 'heebo:light'},
          'color:blue': { selector: 'p,h1,h2,h3,h4,td,th,div,ul,ol,li,span', classes: 'color:blue' },
          'color:white': { selector: 'p,h1,h2,h3,h4,td,th,div,ul,ol,li,span', classes: 'color:white' },
          'color:eerie-black': { selector: 'p,h1,h2,h3,h4,td,th,div,ul,ol,li,span', classes: 'color:eerie-black' },
          'color:yale-blue': { selector: 'p,h1,h2,h3,h4,td,th,div,ul,ol,li,span', classes: 'color:yale-blue' },
          'color:positive': { selector: 'p,h1,h2,h3,h4,td,th,div,ul,ol,li,span', classes: 'color:positive' },
          'color:negative': { selector: 'p,h1,h2,h3,h4,td,th,div,ul,ol,li,span', classes: 'color:negative' },
          'lh:24': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'lh:24' },
          'lh:32': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'lh:32' },
          'lh:40': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'lh:40' },
          'lh:48': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'lh:48' },
          'fs:12px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:12px' },
          'fs:14px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:14px' },
          'fs:16px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:16px' },
          'fs:20px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:20px' },
          'fs:24px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:24px' },
          'fs:28px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:28px' },
          'fs:32px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:32px' },
          'fs:40px': { selector: 'p,td,th,div,ul,ol,li,span', classes: 'fs:40px' },
        },

        codesample_languages: [
          { text: 'HTML/XML', value: 'markup' },
          { text: 'JavaScript', value: 'javascript' },
          { text: 'CSS', value: 'css' },
        ],
        charmap_append: [
          [192, 'À'],
          [224, 'à'],
          [194, 'Â'],
          [226, 'â'],
          [196, 'Ä'],
          [228, 'ä'],
          [202, 'É'],
          [233, 'é'],
          [200, 'È'],
          [232, 'è'],
          [202, 'Ê'],
          [234, 'ê'],
          [203, 'Ë'],
          [235, 'ë'],
          [206, 'Î'],
          [238, 'î'],
          [207, 'Ï'],
          [239, 'ï'],
          [212, 'Ô'],
          [244, 'ô'],
          [217, 'Ù'],
          [249, 'ù'],
          [219, 'Û'],
          [251, 'û'],
          [220, 'Ü'],
          [252, 'ü'],
          [171, '«'],
          [187, '»'],
          [199, 'Ç'],
          [231, 'ç'],
          [140, 'Œ'],
          [156, 'œ'],
          [169, '©'],
          [174, '®'],
          [153, '™'],
          [134, '†'],
          [135, '‡'],
          [167, '§'],
          [916, 'Δ'],
        ],
      }
      storm_eagle.module('tinymce', () => {
        let self;
        let state = {};
        return {
          initialize: () => {
            self = storm_eagle.tinymce;
            state = {};
            document.querySelectorAll('[data-module="tinymce"]').forEach((el) => {
              const id = el.getAttribute('id');
              state[id] = {
                el,
                type: el.getAttribute('data-tinymce-type'),
                preview: el.getAttribute('data-tinymce-preview') || false,
              };
              self.tinymce.initialize(id);
            });
          },
          tinymce: {
            initialize: (id) => {
              const { type, preview } = state[id];
              let config = {
                selector: `#${id}`,
                setup: (editor) => {
                  editor.ui.registry.addMenuButton('advanced', {
                    icon: 'search',
                    text: 'Advanced Options',
                    fetch: (callback) => {
                      const tinymce_advanced_menuitems = [
                        {
                          type: 'menuitem',
                          text:  'Cut',
                          icon: 'cut',
                          onAction: () => {
                            editor.execCommand('cut');
                          },
                        },
                        {
                          type: 'menuitem',
                          text:  'Copy',
                          icon: 'copy',
                          onAction: () => {
                            editor.execCommand('copy');
                          },
                        },
                        {
                          type: 'menuitem',
                          text:  'Paste',
                          icon: 'paste',
                          onAction: () => {
                            editor.execCommand('paste');
                          },
                        },
                        {
                          type: 'menuitem',
                          text:  'Paste as Text',
                          icon: 'paste-text',
                          onAction: () => {
                            editor.execCommand('pastetext');
                          },
                        },
                        {
                          type: 'separator',
                        },
                        {
                          type: 'menuitem',
                          text:  'Underline',
                          icon: 'underline',
                          onAction: () => {
                            editor.execCommand('underline');
                          },
                        },
                        {
                          type: 'menuitem',
                          text:  'Strikethrough',
                          icon: 'strike-through',
                          onAction: () => {
                            editor.execCommand('strikethrough');
                          },
                        },
                        {
                          type: 'menuitem',
                          text:  'Subscript',
                          icon: 'subscript',
                          onAction: () => {
                            editor.execCommand('subscript');
                          },
                        },
                        {
                          type: 'separator',
                        },
                        {
                          type: 'menuitem',
                          text: 'Search and Replace',
                          icon: 'search',
                          onAction: () => {
                            editor.execCommand('searchreplace');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'Select All',
                          icon: 'select-all',
                          onAction: () => {
                            editor.execCommand('selectall');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'Fullscreen',
                          icon: 'fullscreen',
                          onAction: () => {
                            editor.execCommand('fullscreen');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'View as code',
                          icon: 'sourcecode',
                          onAction: () => {
                            editor.execCommand('code');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'Code Sample',
                          icon: 'code-sample',
                          onAction: () => {
                            editor.execCommand('codesample');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'Wordcount',
                          icon: 'character-count',
                          onAction: () => {
                            editor.execCommand('wordcount');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'See Visual Blocks',
                          icon: 'visualblocks',
                          onAction: () => {
                            editor.execCommand('visualblocks');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'See Visual Characters',
                          icon: 'visualchars',
                          onAction: () => {
                            editor.execCommand('visualchars');
                          },
                        },
                        {
                          type: 'menuitem',
                          text: 'Add nonbreaking space',
                          icon: 'non-breaking',
                          onAction: () => {
                            editor.execCommand('nonbreaking');
                          },
                        },
                      ];
                      callback(tinymce_advanced_menuitems);
                    },
                  });
                  editor.on('input ExecCommand', (event) => {
                    if (preview) {
                      if (event.type === 'execcommand' || event.type === 'input') {
                        storm_eagle.tinymce.force_update_preview(editor, preview);
                      }
                    }
                  });
                },
              };
              switch (type) {
                case 'simple-headings':
                  config = { ...config, ...tinymce_common, ...tinymce_simple_headings };
                  break;
                case 'simple-interactive':
                  config = { ...config, ...tinymce_common, ...tinymce_simple_interactive };
                  break;
                case 'complex':
                  config = { ...config, ...tinymce_common, ...tinymce_complex };
                  break;
                default:
                  break;
              }
              tinymce.init(config);
            }
          },
          force_update_preview: (editor,preview_id) => {
            document.getElementById(preview_id).innerHTML = editor.getContent();
          },
        };
      });

/*
      REFERENCE
      tinymce.init({
        plugins: 'anchor casechange charmap checklist code codesample editimage emoticons export footnotes formatpainter fullscreen help image insertdatetime link lists media mergetags nonbreaking pagebreak pageembed permanentpen preview save searchreplace table tableofcontents template typography visualblocks visualchars wordcount',
        toolbar: "aligncenter alignjustify alignleft alignnone alignright anchor blockquote blocks backcolor bold copy cut fontfamily fontsize forecolor h1 h2 h3 h4 h5 h6 hr indent italic language lineheight newdocument outdent paste pastetext print redo remove removeformat selectall strikethrough styles subscript superscript underline undo visualaid a11ycheck advtablerownumbering typopgraphy anchor restoredraft casechange charmap checklist code codesample addcomment showcomments ltr rtl editimage fliph flipv imageoptions rotateleft rotateright emoticons export footnotes footnotesupdate formatpainter fullscreen help image insertdatetime link openlink unlink bullist numlist media mergetags mergetags_list nonbreaking pagebreak pageembed permanentpen preview quickimage quicklink quicktable cancel save searchreplace spellcheckdialog spellchecker table tablecellprops tablecopyrow tablecutrow tabledelete tabledeletecol tabledeleterow tableinsertdialog tableinsertcolafter tableinsertcolbefore tableinsertrowafter tableinsertrowbefore tablemergecells tablepasterowafter tablepasterowbefore tableprops tablerowprops tablesplitcells tableclass tablecellclass tablecellvalign tablecellborderwidth tablecellborderstyle tablecaption tablecellbackgroundcolor tablecellbordercolor tablerowheader tablecolheader tableofcontents tableofcontentsupdate template typography insertfile visualblocks visualchars wordcount",
      });
*/
    </script>
<%- include(`${process.env.PWD}/_dev/_layouts/_default.footer.ejs`, pageData) %>