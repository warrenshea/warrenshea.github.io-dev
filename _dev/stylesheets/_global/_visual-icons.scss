/* file: visual-icons.scss------------------------------------------------ */
.ic {
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
}

$icons: (
  calendar,
  chevron-circle-down,
  chevron-circle-left,
  chevron-circle-right,
  chevron-circle-up,
  chevron-down,
  chevron-left,
  chevron-right,
  chevron-up,
  check,
  check-circle,
  clone,
  copy,
  css3-alt,
  database,
  dragon,
  edit,
  external-link-alt,
  eye,
  git-alt,
  github,
  hand-paper,
  hand-rock,
  html5,
  info-circle,
  instagram,
  js,
  linkedin,
  lock,
  low-vision,
  minus,
  node,
  node-js,
  php,
  phone-alt,
  plus,
  python,
  react,
  redo-alt,
  sass,
  sort-alt,
  spider,
  spider-web,
  spinner,
  terminal,
  times,
  universal-access,
  user-circle,
  vuejs
);

$types: (
  light,
  solid,
  brands
);
@each $icon in $icons {
  @each $type in $types {
    .ic.ic-type\:#{$type}.ic-name\:#{$icon} {
      -webkit-mask-image: url('../assets/icon/#{$type}/#{$icon}.svg');
      mask-image: url('../assets/icon/#{$type}/#{$icon}.svg');
    }
  }
}

$colors: (
  blue      : $blue,
  yale-blue : $yale-blue,
  white     : $white,
  disabled  : $disabled,
  silver    : $silver,
  onyx      : $onyx,
  black     : $black,
  red       : $red,
  negative  : $negative,
  positive  : $positive,
  warning   : $warning,
);

@each $mediaquery in $mediaqueries {
  $breakpoint: nth($mediaquery, 1);
  $prefix: nth($mediaquery, 2);

  @include breakpoint($breakpoint) {

    @each $color in $colors {
      $color-name: nth($color, 1);
      $color-value: nth($color, 2);

      .#{$prefix}ic-color\:#{"" + $color-name} {
        background-color: #{$color-value};
      }
    }
  }
}

$sizes: (
  12px : rem-calc(12),
  16px : rem-calc(16),
  20px : rem-calc(20),
  24px : rem-calc(24),
  32px : rem-calc(32),
  48px : rem-calc(48),
  72px : rem-calc(72),
  96px : rem-calc(96),
);

@each $mediaquery in $mediaqueries {
  $breakpoint: nth($mediaquery, 1);
  $prefix: nth($mediaquery, 2);

  @include breakpoint($breakpoint) {

    @each $size in $sizes {
      $size-name: nth($size, 1);
      $size-value: nth($size, 2);

      .#{$prefix}ic-size\:#{$size-name} {
        width: #{$size-value};
        min-width: #{$size-value};
        height: #{$size-value};
      }
    }
  }
}